data$Drug_Related[is.na(data$Drug_Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest Date' column
sum(is.na(data$`Arrest Date`))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest Date'
invalid_dates <- data[is.na(data$`Arrest Date`), ]
# Filter out rows with missing 'Arrest Date' before conversion
data_valid_dates <- data[!is.na(data$`Arrest Date`), ]
# Now convert 'Arrest Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$`Arrest Date`, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee_Race <- as.factor(data$Arrestee_Race)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# 1. Handle missing values: count the number of missing values in each column
colSums(is.na(data))
# 2. c1: Remove rows with missing data (optional)
data_cleaned <- na.omit(data)
# 3. c2: Replace missing values in 'Drug_Type' with 'Unknown' for 'Drug_Related'
# First, check for NA values and replace them
if (sum(is.na(data$Drug_Type)) > 0) {
data$Drug_Related[is.na(data$Drug_Type)] <- "Unknown"
}
# 4. Convert 'Arrest Date' to proper date format MM/DD/YY
# First, ensure there are no missing values in 'Arrest Date' and handle them
if (sum(is.na(data$`Arrest Date`)) == 0) {
# Convert 'Arrest Date' to Date format
data$Arrest_Date <- as.Date(data$`Arrest Date`, format = "%m/%d/%y")
} else {
# Remove rows with missing 'Arrest Date' before conversion
data <- data[!is.na(data$`Arrest Date`), ]
data$Arrest_Date <- as.Date(data$`Arrest Date`, format = "%m/%d/%y")
}
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# 1. Handle missing values: count the number of missing values in each column
colSums(is.na(data))
# 2. c1: Remove rows with missing data (optional)
data_cleaned <- na.omit(data)
# 3. c2: Replace missing values in 'Drug_Type' with 'Unknown' for 'Drug_Related'
# First, check for NA values and replace them
if (sum(is.na(data$Drug_Type)) > 0) {
data$Drug_Related[is.na(data$Drug_Type)] <- "Unknown"
}
# 4. Convert 'Arrest Date' to proper date format MM/DD/YY
# 5. Convert categorical variables to factors
data$Arrestee_Race <- as.factor(data$Arrestee_Race)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# 1. Handle missing values: count the number of missing values in each column
colSums(is.na(data))
# 2. c1: Remove rows with missing data (optional, depending on your strategy)
data_cleaned <- na.omit(data)
# 3. c2: Replace missing values in 'Drug_Type' with 'Unknown' for 'Drug_Related'
# Ensure the column exists before making changes
if ("Drug_Type" %in% colnames(data) & "Drug_Related" %in% colnames(data)) {
data$Drug_Related[is.na(data$Drug_Type)] <- "Unknown"
}
# 4. Convert 'Arrest Date' to proper date format MM/DD/YY
# Check if 'Arrest Date' column exists and has no missing values before converting
if ("Arrest Date" %in% colnames(data)) {
# First, remove rows with missing 'Arrest Date' (if necessary)
data <- data[!is.na(data$`Arrest Date`), ]
# Convert 'Arrest Date' to Date format, catching any format issues
data$Arrest_Date <- as.Date(data$`Arrest Date`, format = "%m/%d/%y")
# If conversion produces NA values, this might indicate incorrect format
if (any(is.na(data$Arrest_Date))) {
stop("Date conversion failed. Check the format of 'Arrest Date'.")
}
} else {
stop("'Arrest Date' column is missing.")
}
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# 1. Handle missing values: count the number of missing values in each column
colSums(is.na(data))
# 2. c1: Remove rows with missing data (optional, depending on your strategy)
data_cleaned <- na.omit(data)
# 3. c2: Replace missing values in 'Drug_Type' with 'Unknown' for 'Drug_Related'
# Ensure the column exists before making changes
if ("Drug_Type" %in% colnames(data) & "Drug_Related" %in% colnames(data)) {
data$Drug_Related[is.na(data$Drug_Type)] <- "Unknown"
}
# 4. Convert 'Arrest Date' to proper date format MM/DD/YY
# Check if 'Arrest Date' column exists and has no missing values before converting
if ("Arrest_Date" %in% colnames(data)) {
# First, remove rows with missing 'Arrest Date' (if necessary)
data <- data[!is.na(data$`Arrest Date`), ]
# Convert 'Arrest Date' to Date format, catching any format issues
data$Arrest_Date <- as.Date(data$`Arrest Date`, format = "%m/%d/%y")
# If conversion produces NA values, this might indicate incorrect format
if (any(is.na(data$Arrest_Date))) {
stop("Date conversion failed. Check the format of 'Arrest Date'.")
}
} else {
stop("'Arrest Date' column is missing.")
}
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# 1. Handle missing values: count the number of missing values in each column
colSums(is.na(data))
# 2. c1: Remove rows with missing data (optional, depending on your strategy)
data_cleaned <- na.omit(data)
# 3. c2: Replace missing values in 'Drug_Type' with 'Unknown' for 'Drug_Related'
# Ensure the column exists before making changes
if ("Drug_Type" %in% colnames(data) & "Drug_Related" %in% colnames(data)) {
data$Drug_Related[is.na(data$Drug_Type)] <- "Unknown"
}
# 4. Convert 'Arrest Date' to proper date format MM/DD/YY
# Check if 'Arrest Date' column exists and has no missing values before converting
if ("Arrest.Date" %in% colnames(data)) {
# First, remove rows with missing 'Arrest Date' (if necessary)
data <- data[!is.na(data$`Arrest Date`), ]
# Convert 'Arrest Date' to Date format, catching any format issues
data$Arrest_Date <- as.Date(data$`Arrest Date`, format = "%m/%d/%y")
# If conversion produces NA values, this might indicate incorrect format
if (any(is.na(data$Arrest_Date))) {
stop("Date conversion failed. Check the format of 'Arrest Date'.")
}
} else {
stop("'Arrest Date' column is missing.")
}
# 5. Convert categorical variables to factors, if they exist
if ("Arrestee_Race" %in% colnames(data)) {
data$Arrestee_Race <- as.factor(data$Arrestee_Race)
}
if ("Arrestee_Sex" %in% colnames(data)) {
data$Arrestee_Sex <- as.factor(data$Arrestee_Sex)
}
if ("Drug_Related" %in% colnames(data)) {
data$Drug_Related <- as.factor(data$Drug_Related)
}
# 6. Standardize 'Arrestee_Sex' to lowercase if the column exists
if ("Arrestee_Sex" %in% colnames(data)) {
data$Arrestee_Sex <- tolower(data$Arrestee_Sex)
}
# 7. Remove white spaces from 'Arrestee_Sex' and 'Arrestee_Race' if they exist
if ("Arrestee_Sex" %in% colnames(data)) {
data$Arrestee_Sex <- trimws(data$Arrestee_Sex)
}
if ("Arrestee_Race" %in% colnames(data)) {
data$Arrestee_Race <- trimws(data$Arrestee_Race)
}
# 8. Check for and remove duplicate rows
duplicates <- data[duplicated(data), ]  # Identify duplicates
data_cleaned <- data[!duplicated(data), ]  # Remove duplicates
# 9. Filter out unnecessary columns 'IncidentNum', 'Latitude', 'Longitude' if they exist
columns_to_drop <- c("IncidentNum", "Latitude", "Longitude")
existing_columns <- intersect(columns_to_drop, colnames(data_cleaned))
data_cleaned <- subset(data_cleaned, select = -existing_columns)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# Filter columns and remove 'IncidentNum', 'Latitude', and 'Longitude'
data_cleaned <- subset(data_cleaned, select = -c(IncidentNum, Latitude, Longitude))  # Fixed column names here
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# Filter columns and remove 'IncidentNum', 'Latitude', and 'Longitude'
data_cleaned <- subset(data_cleaned, select = -c(IncidentNum, Latitude, Longitude))  # Fixed column names here
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# Filter columns and remove 'IncidentNum', 'Latitude', and 'Longitude'
data_cleaned <- subset(data_cleaned, select = -c(IncidentNum, Latitude, Longitude))  # Fixed column names here
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
ggplot(data_cleaned, aes(x = Longitude, y = Latitude)) +
geom_point(alpha = 0.5, color = "blue") +
labs(title = "Arrests by Location", x = "Longitude", y = "Latitude") +
theme_minimal()
# Remove the trailing spaces from the column names
colnames(data_cleaned) <- trimws(colnames(data_cleaned))
# Extract latitude and longitude from the dataset
latitude_longitude_data <- data_cleaned[, c("Latitude", "Longitude")]
library(ggplot2)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# Filter columns and remove 'IncidentNum', 'Latitude', and 'Longitude'
data_cleaned <- subset(data_cleaned, select = -c(IncidentNum, Latitude, Longitude))  # Fixed column names here
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
# Remove the trailing spaces from the column names
colnames(data_cleaned) <- trimws(colnames(data_cleaned))
# Extract latitude and longitude from the dataset
latitude_longitude_data <- data_cleaned[, c("Latitude", "Longitude")]
library(ggplot2)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# Filter columns and remove 'IncidentNum', 'Latitude', and 'Longitude'
data_cleaned <- subset(data_cleaned, select = -c(IncidentNum, Latitude, Longitude))  # Fixed column names here
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
library(ggplot2)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# Filter columns and remove 'IncidentNum', 'Latitude', and 'Longitude'
data_cleaned <- subset(data_cleaned, select = -c(IncidentNum, Latitude, Longitude))  # Fixed column names here
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
# --- Additional steps for Latitude and Longitude plotting ---
# Remove any leading/trailing spaces from the column names
colnames(data_cleaned) <- trimws(colnames(data_cleaned))
# Extract latitude and longitude after cleaning the column names
latitude_longitude_data <- data_cleaned[, c("Latitude", "Longitude")]
library(ggplot2)
# Load the data
data <- read.csv("Police_Arrests.csv", stringsAsFactors = FALSE)
# Summary and structure of the data
summary(data)
str(data)
# Handle missing values
colSums(is.na(data))
# c1: Remove rows with missing data
data_cleaned <- na.omit(data)
# Check if there are any NA values in 'Drug.Type'
sum(is.na(data$Drug.Type))  # This should return the number of missing values in 'Drug.Type'
# Replace missing values in 'Drug.Type' with 'Unknown' for 'Drug.Related'
# First, ensure that there are NA values to replace
if (sum(is.na(data$Drug.Type)) > 0) {
data$Drug.Related[is.na(data$Drug.Type)] <- "Unknown"
}
# Check for missing or invalid entries in the 'Arrest.Date' column
sum(is.na(data$Arrest.Date))  # Count the number of missing values
# Identify rows with missing or invalid 'Arrest.Date'
invalid_dates <- data[is.na(data$Arrest.Date), ]
# Filter out rows with missing 'Arrest.Date' before conversion
data_valid_dates <- data[!is.na(data$Arrest.Date), ]
# Now convert 'Arrest.Date' to date format MM/DD/YY for the filtered data
data_valid_dates$Arrest_Date <- as.Date(data_valid_dates$Arrest.Date, format = "%m/%d/%y")
# Check the structure to ensure the conversion worked
str(data_valid_dates)
# Convert categorical variables to factors
data$Arrestee.Race <- as.factor(data$Arrestee.Race)
data$Arrestee.Sex <- as.factor(data$Arrestee.Sex)
data$Drug.Related <- as.factor(data$Drug.Related)
# Standardize 'Arrestee.Sex' to lowercase
data$Arrestee.Sex <- tolower(data$Arrestee.Sex)
# Remove white spaces from 'Arrestee.Sex' and 'Arrestee.Race'
data$Arrestee.Sex <- trimws(data$Arrestee.Sex)
data$Arrestee.Race <- trimws(data$Arrestee.Race)
# Check for duplicates
duplicates <- data[duplicated(data),]
# Remove duplicates (tentative)
data_cleaned <- data[!duplicated(data),]
# --- Latitude and Longitude Handling ---
# Clean column names to remove leading/trailing spaces
colnames(data_cleaned) <- trimws(colnames(data_cleaned))
# Plot Arrests by Latitude and Longitude using ggplot2
ggplot(data_cleaned, aes(x = Longitude, y = Latitude)) +
geom_point(alpha = 0.5, color = "blue") +
labs(title = "Arrests by Location (Latitude vs. Longitude)", x = "Longitude", y = "Latitude") +
theme_minimal()
# Outliers: Boxplot for 'Arrestee.Age.At.Arrest.Time'
boxplot(data$Arrestee.Age.At.Arrest.Time, main = "Boxplot of Arrestee Age")
# Write cleaned data to CSV
write.csv(data_cleaned, "DallasArrests_cleaned.csv", row.names = FALSE)
